# CMake generated Testfile for 
# Source directory: C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment
# Build directory: C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=EmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=EmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=EmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=EmptyTree.InsertNode")
else()
  add_test(EmptyTree.InsertNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=EmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=EmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=EmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=EmptyTree.DeleteNode")
else()
  add_test(EmptyTree.DeleteNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=EmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=EmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=EmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=EmptyTree.FindNode")
else()
  add_test(EmptyTree.FindNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=NonEmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=NonEmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=NonEmptyTree.InsertNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyTree.InsertNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=NonEmptyTree.InsertNode")
else()
  add_test(NonEmptyTree.InsertNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=NonEmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=NonEmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=NonEmptyTree.DeleteNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyTree.DeleteNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=NonEmptyTree.DeleteNode")
else()
  add_test(NonEmptyTree.DeleteNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=NonEmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=NonEmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=NonEmptyTree.FindNode")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyTree.FindNode "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=NonEmptyTree.FindNode")
else()
  add_test(NonEmptyTree.FindNode NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(TreeAxioms.Axiom1 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(TreeAxioms.Axiom1 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(TreeAxioms.Axiom1 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom1")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(TreeAxioms.Axiom1 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom1")
else()
  add_test(TreeAxioms.Axiom1 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(TreeAxioms.Axiom2 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(TreeAxioms.Axiom2 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(TreeAxioms.Axiom2 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom2")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(TreeAxioms.Axiom2 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom2")
else()
  add_test(TreeAxioms.Axiom2 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(TreeAxioms.Axiom3 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom3")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(TreeAxioms.Axiom3 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom3")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(TreeAxioms.Axiom3 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom3")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(TreeAxioms.Axiom3 "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/black_box_test.exe" "--gtest_filter=TreeAxioms.Axiom3")
else()
  add_test(TreeAxioms.Axiom3 NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(FirstTest.MatrixConstructor "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/white_box_test.exe" "--gtest_filter=FirstTest.MatrixConstructor")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(FirstTest.MatrixConstructor "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/white_box_test.exe" "--gtest_filter=FirstTest.MatrixConstructor")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(FirstTest.MatrixConstructor "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/white_box_test.exe" "--gtest_filter=FirstTest.MatrixConstructor")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(FirstTest.MatrixConstructor "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/white_box_test.exe" "--gtest_filter=FirstTest.MatrixConstructor")
else()
  add_test(FirstTest.MatrixConstructor NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Insert")
else()
  add_test(NonEmptyQueue.Insert NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyQueue.RemoveAllBackward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllBackward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyQueue.RemoveAllBackward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllBackward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyQueue.RemoveAllBackward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllBackward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyQueue.RemoveAllBackward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllBackward")
else()
  add_test(NonEmptyQueue.RemoveAllBackward NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyQueue.RemoveAllForward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllForward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyQueue.RemoveAllForward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllForward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyQueue.RemoveAllForward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllForward")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyQueue.RemoveAllForward "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=NonEmptyQueue.RemoveAllForward")
else()
  add_test(NonEmptyQueue.RemoveAllForward NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Find")
else()
  add_test(NonEmptyQueue.Find NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(NonEmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(NonEmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(NonEmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(NonEmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=NonEmptyQueue.Length")
else()
  add_test(NonEmptyQueue.Length NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=EmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=EmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=EmptyQueue.Insert")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyQueue.Insert "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=EmptyQueue.Insert")
else()
  add_test(EmptyQueue.Insert NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyQueue.Remove "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=EmptyQueue.Remove")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyQueue.Remove "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=EmptyQueue.Remove")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyQueue.Remove "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=EmptyQueue.Remove")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyQueue.Remove "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=EmptyQueue.Remove")
else()
  add_test(EmptyQueue.Remove NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=EmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=EmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=EmptyQueue.Find")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyQueue.Find "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=EmptyQueue.Find")
else()
  add_test(EmptyQueue.Find NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(EmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Debug/tdd_test.exe" "--gtest_filter=EmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(EmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/Release/tdd_test.exe" "--gtest_filter=EmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(EmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/MinSizeRel/tdd_test.exe" "--gtest_filter=EmptyQueue.Length")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(EmptyQueue.Length "C:/Users/matej/Desktop/Škola/2. semester/IVS/1.Projekt/assignment/build/RelWithDebInfo/tdd_test.exe" "--gtest_filter=EmptyQueue.Length")
else()
  add_test(EmptyQueue.Length NOT_AVAILABLE)
endif()
subdirs("googletest-build")
